/*###########################################################
이름   : reactive-heading
사용법 : 반응형으로 헤딩 태그를 쓰고 싶을 때 사용
   >>> 간단하게 inline-block이 적용된거니까 개행되면 어색한 텍스트를 이 클래스를 쓰는 태그로
   >>> 묶어주면 공간이 있으면 한줄에 다 뜨고, 아니면 개행될 것임.
*/
.reactive-heading{
  display: inline-block;
}

/*###########################################################
이름   : mat-icon-vertical-aligner
사용법 : 헤딩태그에 감싸진 mat-icon태그에 적용할 것
   >>> 만약 h3태그와 함께 각을 맞추고 싶은거라면, 우선 mat-icon을 h3태그로 감싸자
   >>> 그런 다음 mat-icon에 vertical-align : middle 속성을 주면 해결된다
   >>> 절대 center가 아니다. vertical-align 속성엔 center값 같은건 없다
*/
.mat-icon-vertical-aligner{
  vertical-align: middle;
}
/*###########################################################
이름   : text-spacer-left & Right 시리즈
사용법 : 문자의 좌우간격을 아주 약간 띄워주고 싶을 때 쓸 것
  >>> 아래의 빈 클래스는 자동완성을 위한 클래스임
  >>> h3정도면 1단계가 딱 띄어쓰기 한 정도의 크기일거임. 아마도
*/
.text-spacer-left-{}
.text-spacer-right-{}
$i : 1;
$textSpacerStartValue : 3;
@while $i <= 10{
  .text-spacer-left-#{$i}{
    margin-left: $textSpacerStartValue + $i + px;
  }
  $i : $i + 1;
}

$i : 1;
@while $i <= 10{
  .text-spacer-right-#{$i}{
    margin-right: $textSpacerStartValue + $i + px;
  }
  $i : $i + 1;
}

/*###########################################################
이름   : disable-text-select
사용법 : 해당 텍스트가 드래그되는걸 방지하기 위한 클래스임.
   >>> 굳이 텍스트 태그 각각에 적용할 필요 없음. 최상위래퍼에 적용하면 하위까지 다 먹음.
*/
.disable-text-select{
  user-select: none;
}
/*###########################################################
이름   : enable-pre-wrap
사용법 : 개행문자 사용을 위한 클래스
*/
.enable-pre-wrap{
  white-space: pre-wrap;
}

